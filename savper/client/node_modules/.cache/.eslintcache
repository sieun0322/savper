[{"C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\index.js":"1","C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\App.js":"2","C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\components\\UploadForm.js":"3","C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\components\\ProgressBar.js":"4","C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\components\\DocList.js":"5","C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\context\\DocContext.js":"6"},{"size":372,"mtime":1635523401145,"results":"7","hashOfConfig":"8"},{"size":504,"mtime":1635523107750,"results":"9","hashOfConfig":"8"},{"size":2661,"mtime":1635524735985,"results":"10","hashOfConfig":"8"},{"size":275,"mtime":1634917033475,"results":"11","hashOfConfig":"8"},{"size":417,"mtime":1635524336149,"results":"12","hashOfConfig":"8"},{"size":525,"mtime":1635524523249,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15914yj",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\index.js",[],"C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\App.js",[],"C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\components\\UploadForm.js",["29"],"import React,{ useState, useContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./UploadForm.css\";\r\nimport ProgressBar from \"./ProgressBar.js\";\r\nimport { DocContext } from \"../context/DocContext\";\r\n\r\n\r\nconst UploadForm =() =>{\r\n    const [docs, setDocs] = useContext(DocContext);\r\n    const defaultFileName = \"이미지 파일을 업로드 해주세요\";\r\n    const [file, setFile] = useState(null);\r\n    const [docSrc, setDocSrc] = useState(null);\r\n    \r\n    const [fileName, setFileName] = useState(defaultFileName);\r\n    const [percent, setPercent] = useState(0);\r\n    const imageSelectHandler = (event) => {\r\n                const documentFile = event.target.files[0];\r\n                setFile(documentFile);\r\n                setFileName(documentFile.name);\r\n                const fileReader = new FileReader();\r\n                fileReader.readAsDataURL(documentFile);\r\n                fileReader.onload = e => setDocSrc(e.target.result);\r\n            };\r\n    const onSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"doc\",file)\r\n        try{\r\n            const res = await axios.post(\"/docs\",formData,{\r\n                headers:{\"Content-Type\":\"multipart/form-data\"}\r\n                ,onUploadProgress:(e) =>{\r\n                  setPercent(Math.round((100*e.loaded)/e.total));\r\n                }\r\n              });\r\n            console.log({res});\r\n            setDocs([...docs,res.data]);\r\n            toast.success(\"파일 업로드 성공\");\r\n            setTimeout(()=>{\r\n              setPercent(0);\r\n              setFileName(defaultFileName);\r\n              setDocSrc(null);\r\n            },3000);\r\n        }catch(err){\r\n            toast.error(err.message);\r\n            setPercent(0);\r\n            setFileName(defaultFileName);\r\n            setDocSrc(null);\r\n            console.error(err);\r\n        }\r\n    };      \r\n    return (\r\n      <div>\r\n        <form onSubmit={onSubmit}>\r\n          <img src={docSrc} className ={`image-preview ${docSrc && \"image-preview-show\"}`}/>\r\n          <ProgressBar percent ={percent}/>\r\n          <div className=\"file-dropper\">\r\n            {fileName}\r\n            <input id=\"file\" type=\"file\" accept=\"image/*, jpg\" onChange={imageSelectHandler} />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: 40,\r\n              borderRadius: 3,\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            제출\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n};\r\nexport default UploadForm;","C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\components\\ProgressBar.js",[],["30","31"],"C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\components\\DocList.js",["32"],"import React, { useContext } from \"react\";\r\nimport {DocContext} from \"../context/DocContext\";\r\n\r\nconst DocList = () => {\r\n  const [docs] = useContext(DocContext);\r\n  const docList = docs.map((doc) =>\r\n  <img style ={{width:\"100%\"}} \r\n  key = {doc.key}\r\n  src={`http://localhost:5000/uploads/${doc.key}`}/>)\r\n  return (\r\n    <div>\r\n      <h3>DocList</h3>\r\n      {docList}\r\n    </div>\r\n  );\r\n};\r\nexport default DocList;","C:\\Users\\lce95\\Desktop\\savper\\savper\\client\\src\\context\\DocContext.js",[],{"ruleId":"33","severity":1,"message":"34","line":55,"column":11,"nodeType":"35","endLine":55,"endColumn":93},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"33","severity":1,"message":"34","line":7,"column":3,"nodeType":"35","endLine":9,"endColumn":53},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-global-assign","no-unsafe-negation"]